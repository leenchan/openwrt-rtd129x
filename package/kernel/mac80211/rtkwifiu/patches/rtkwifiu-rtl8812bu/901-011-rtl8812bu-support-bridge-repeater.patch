--- a/drivers/net/wireless/realtek/rtkwifiu/rtl8812bu/core/rtw_br_ext.c
+++ b/drivers/net/wireless/realtek/rtkwifiu/rtl8812bu/core/rtw_br_ext.c
@@ -535,7 +535,7 @@ static void __nat25_db_print(_adapter *priv)
 
 	counter++;
 	if ((counter % 16) != 0)
-		return;
+		goto __nat25_db_print_end;
 
 	for (i = 0, j = 0; i < NAT25_HASH_SIZE; i++) {
 		db = priv->nethash[i];
@@ -599,7 +599,7 @@ static void __nat25_db_print(_adapter *priv)
 		}
 	}
 #endif
-
+__nat25_db_print_end:
 	_exit_critical_bh(&priv->br_ext_lock, &irqL);
 }
 
--- a/drivers/net/wireless/realtek/rtkwifiu/rtl8812bu/core/rtw_xmit.c
+++ b/drivers/net/wireless/realtek/rtkwifiu/rtl8812bu/core/rtw_xmit.c
@@ -1384,7 +1384,8 @@ static s32 update_attrib(_adapter *padapter, _pkt *pkt, struct pkt_attrib *pattr
 	} else if (0x888e == pattrib->ether_type)
 		RTW_PRINT("send eapol packet\n");
 
-	if ((pattrib->ether_type == 0x888e) || (pattrib->dhcp_pkt == 1))
+	if ((pattrib->ether_type == 0x888e)
+	|| ((pattrib->dhcp_pkt == 1) && (check_fwstate(&padapter->mlmepriv, WIFI_AP_STATE) == _FALSE)))
 		rtw_mi_set_scan_deny(padapter, 3000);
 
 #ifdef CONFIG_LPS
--- a/drivers/net/wireless/realtek/rtkwifiu/rtl8812bu/include/osdep_service_linux.h
+++ b/drivers/net/wireless/realtek/rtkwifiu/rtl8812bu/include/osdep_service_linux.h
@@ -121,6 +121,10 @@
 	#include <linux/netlink.h>
 #endif /* CONFIG_BT_COEXIST_SOCKET_TRX */
 
+#ifdef CONFIG_BR_EXT
+	#include <../net/bridge/br_private.h>
+#endif
+
 #ifdef CONFIG_USB_HCI
 	typedef struct urb   *PURB;
 	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 22))
@@ -440,5 +444,12 @@ extern struct net_device *rtw_alloc_etherdev(int sizeof_priv);
 
 #define STRUCT_PACKED __attribute__ ((packed))
 
+#ifdef CONFIG_BR_EXT
+#if LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,35)
+#define GET_BR_PORT(netdev)	(netdev)->br_port
+#else
+#define GET_BR_PORT(netdev)	br_port_get_rcu(netdev)
+#endif
+#endif //CONFIG_BR_EXT
 
 #endif
--- a/drivers/net/wireless/realtek/rtkwifiu/rtl8812bu/os_dep/linux/os_intfs.c
+++ b/drivers/net/wireless/realtek/rtkwifiu/rtl8812bu/os_dep/linux/os_intfs.c
@@ -2196,6 +2196,10 @@ void rtw_intf_stop(_adapter *adapter)
 		adapter->intf_stop(adapter);
 }
 
+#ifdef CONFIG_BR_EXT
+void netdev_br_init(struct net_device *netdev);
+#endif
+
 #ifdef CONFIG_CONCURRENT_MODE
 int _netdev_vir_if_open(struct net_device *pnetdev)
 {
@@ -2266,6 +2270,10 @@ int _netdev_vir_if_open(struct net_device *pnetdev)
 
 	rtw_netif_wake_queue(pnetdev);
 
+#ifdef CONFIG_BR_EXT
+	netdev_br_init(pnetdev);
+#endif
+
 	RTW_INFO(FUNC_NDEV_FMT" (bup=%d) exit\n", FUNC_NDEV_ARG(pnetdev), padapter->bup);
 
 	return 0;
@@ -2658,48 +2666,24 @@ void rtw_os_ndevs_deinit(struct dvobj_priv *dvobj)
 void netdev_br_init(struct net_device *netdev)
 {
 	_adapter *adapter = (_adapter *)rtw_netdev_priv(netdev);
+	struct net_bridge_port *br_port;
 
-#if (LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 35))
-	rcu_read_lock();
-#endif /* (LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 35)) */
-
-	/* if(check_fwstate(pmlmepriv, WIFI_STATION_STATE|WIFI_ADHOC_STATE) == _TRUE) */
-	{
-		/* struct net_bridge	*br = netdev->br_port->br; */ /* ->dev->dev_addr; */
-#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2, 6, 35))
-		if (netdev->br_port)
-#else   /* (LINUX_VERSION_CODE <= KERNEL_VERSION(2, 6, 35)) */
-		if (rcu_dereference(adapter->pnetdev->rx_handler_data))
-#endif /* (LINUX_VERSION_CODE <= KERNEL_VERSION(2, 6, 35)) */
-		{
-			struct net_device *br_netdev;
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 24))
-			br_netdev = dev_get_by_name(CONFIG_BR_EXT_BRNAME);
-#else	/* (LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 24)) */
-			struct net *devnet = NULL;
+	if(netdev->priv_flags & IFF_DONT_BRIDGE) {
+		//printk("Unable to be bridged !! Unlock for this iface !!\n");
+		netdev->priv_flags &= ~(IFF_DONT_BRIDGE);
+	}
 
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 26))
-			devnet = netdev->nd_net;
-#else	/* (LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 26)) */
-			devnet = dev_net(netdev);
-#endif /* (LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 26)) */
-
-			br_netdev = dev_get_by_name(devnet, CONFIG_BR_EXT_BRNAME);
-#endif /* (LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 24)) */
-
-			if (br_netdev) {
-				memcpy(adapter->br_mac, br_netdev->dev_addr, ETH_ALEN);
-				dev_put(br_netdev);
-			} else
-				printk("%s()-%d: dev_get_by_name(%s) failed!", __FUNCTION__, __LINE__, CONFIG_BR_EXT_BRNAME);
-		}
+#if LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,35)
+	br_port = netdev->br_port;
+#else
+	br_port = br_port_get_rcu(netdev);
+#endif
 
-		adapter->ethBrExtInfo.addPPPoETag = 1;
-	}
+	br_port = GET_BR_PORT(netdev);
+	if(br_port)
+		memcpy(adapter->br_mac, br_port->br->dev->dev_addr, ETH_ALEN);
 
-#if (LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 35))
-	rcu_read_unlock();
-#endif /* (LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 35)) */
+	adapter->ethBrExtInfo.addPPPoETag = 1;
 }
 #endif /* CONFIG_BR_EXT */
 
